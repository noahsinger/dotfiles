# brew
# Autogenerated from man page /usr/local/share/man/man1/brew.1
complete -c brew -l prune --description 'Remove all cache files older than specified days.'
complete -c brew -s n -l dry-run --description 'Show what would be removed, but do not actually remove anything.'
complete -c brew -s s --description 'Scrub the cache, including downloads for even the latest versions.'
complete -c brew -l prune-prefix --description 'Only prune the symlinks and directories from the prefix and remove no other f…'
complete -c brew -s q -l quiet --description 'List only the names of commands without category headers.'
complete -c brew -l include-aliases --description 'Include aliases of internal commands.'
complete -c brew -l 1 --description 'Only show dependencies one level down, instead of recursing.'
complete -c brew -l union --description 'Show the union of dependencies for multiple formula, instead of the intersect…'
complete -c brew -l full-name --description 'List dependencies by their full name.'
complete -c brew -l include-build --description 'Include :build dependencies for formula.'
complete -c brew -l include-optional --description 'Include :optional dependencies for formula.'
complete -c brew -l include-test --description 'Include :test dependencies for formula (non-recursive).'
complete -c brew -l skip-recommended --description 'Skip :recommended dependencies for formula.'
complete -c brew -l include-requirements --description 'Include requirements in addition to dependencies for formula.'
complete -c brew -l tree --description 'Show dependencies as a tree.'
complete -c brew -l annotate --description 'Mark any build, test, optional, or recommended dependencies as such in the ou…'
complete -c brew -l installed --description 'List dependencies for formulae that are currently installed.'
complete -c brew -l all --description 'List dependencies for all available formulae.'
complete -c brew -l for-each --description 'Switch into the mode used by the --all option, but only list dependencies for…'
complete -c brew -l search --description 'Search both names and descriptions for text.'
complete -c brew -l name --description 'Search just names for text.'
complete -c brew -s d -l description --description 'Search just descriptions for text.'
complete -c brew -l version --description 'Explicitly set the version of the package being installed.'
complete -c brew -l list-checks --description 'List all audit methods.'
complete -c brew -s D -l audit-debug --description 'Enable debugging and profiling of audit methods.'
complete -c brew -l HEAD --description 'Fetch HEAD version instead of stable version.'
complete -c brew -l devel --description 'Fetch development version instead of stable version.'
complete -c brew -s f -l force --description 'Remove a previously cached version and re-fetch.'
complete -c brew -s v -l verbose --description 'Do a verbose VCS checkout, if the URL represents a VCS.'
complete -c brew -l retry --description 'Retry if downloading fails or re-download if the checksum of a previously cac…'
complete -c brew -l deps --description 'Also download dependencies for any listed formula.'
complete -c brew -l build-from-source --description 'Download source packages rather than a bottle.'
complete -c brew -l build-bottle --description 'Download source packages (for eventual bottling) rather than a bottle.'
complete -c brew -l force-bottle --description 'Download a bottle if it exists for the current or newest version of macOS, ev…'
complete -c brew -l with-hostname --description 'Include the hostname in the Gist.'
complete -c brew -l new-issue --description 'Automatically create a new issue in the appropriate GitHub repository after c…'
complete -c brew -s p -l private --description 'The Gist will be marked private and will not appear in listings but will be a…'
complete -c brew -l analytics --description 'List global Homebrew analytics data or, if specified, installation and build …'
complete -c brew -l days --description 'How many days of global analytics data to retrieve.'
complete -c brew -l category --description 'Which type of global analytics data to retrieve.'
complete -c brew -l github --description 'Open the GitHub source page for formula in a browser.'
complete -c brew -l json --description 'Print a JSON representation of formula.'
complete -c brew -l debug --description 'If brewing fails, open an interactive debugging session with access to IRB or…'
complete -c brew -l env --description 'If std is passed, use the standard build environment instead of superenv.'
complete -c brew -l ignore-dependencies --description 'An unsupported Homebrew development flag to skip installing any dependencies …'
complete -c brew -l only-dependencies --description 'Install the dependencies with specified options but do not install the formul…'
complete -c brew -l cc --description 'Attempt to compile using the specified compiler, which should be the name of …'
complete -c brew -l fetch-HEAD --description 'Fetch the upstream repository to detect if the HEAD installation of the formu…'
complete -c brew -l keep-tmp --description 'Retain the temporary files created during installation.'
complete -c brew -l bottle-arch --description 'Optimise bottles for the specified architecture rather than the oldest archit…'
complete -c brew -l display-times --description 'Print install times for each formula at the end of the run.'
complete -c brew -s i -l interactive --description 'Download and patch formula, then open a shell.  This allows the user to run .'
complete -c brew -s g -l git --description 'Create a Git repository, useful for creating patches to the software.'
complete -c brew -l overwrite --description 'Delete files that already exist in the prefix while linking.'
complete -c brew -l unbrewed --description 'List files in Homebrew\'s prefix not installed by Homebrew.'
complete -c brew -l versions --description 'Show the version number for installed formulae, or only the specified formula…'
complete -c brew -l multiple --description 'Only show formulae with multiple versions installed.'
complete -c brew -l pinned --description 'Show the versions of pinned formulae, or only the specified (pinned) formulae…'
complete -c brew -s 1 --description 'Force output to be one entry per line.'
complete -c brew -s l --description 'List in long format.'
complete -c brew -s r --description 'Reverse the order of the sort to list the oldest entries first.'
complete -c brew -s t --description 'Sort by time modified, listing most recently modified first.'
complete -c brew -l patch --description 'Also print patch from commit.'
complete -c brew -l stat --description 'Also print diffstat from commit.'
complete -c brew -l oneline --description 'Print only one line per commit.'
complete -c brew -l max-count --description 'Print only one or a specified number of commits.'
complete -c brew -l hide --description 'Act as if none of the specified hidden are installed.'
complete -c brew -l compact --description 'Show all options on a single line separated by spaces.'
complete -c brew -l aliases --description 'Verify any alias symlinks in each tap.'
complete -c brew -l syntax --description 'Syntax-check all of Homebrew\'s Ruby files.'
complete -c brew -l casks --description 'List all locally available casks (including tapped ones).'
complete -c brew -l desc --description 'Search for formulae with a description matching text and casks with a name ma…'
complete -c brew -l macports --description 'Search for text in the given package manager\'s list.'
complete -c brew -l fink --description 'Search for text in the given package manager\'s list.'
complete -c brew -l opensuse --description 'Search for text in the given package manager\'s list.'
complete -c brew -l fedora --description 'Search for text in the given package manager\'s list.'
complete -c brew -l debian --description 'Search for text in the given package manager\'s list.'
complete -c brew -l ubuntu --description 'Search for text in the given package manager\'s list.'
complete -c brew -l fix --description 'Fix style violations automatically using RuboCop\'s auto-correct feature.'
complete -c brew -l display-cop-names --description 'Include the RuboCop cop name for each violation in the output.'
complete -c brew -l only-cops --description 'Specify a comma-separated cops list to check for violations of only the liste…'
complete -c brew -l except-cops --description 'Specify a comma-separated cops list to skip checking for violations of the li…'
complete -c brew -l full --description 'Use a full clone when tapping a repository.'
complete -c brew -l force-auto-update --description 'Auto-update tap even if it is not hosted on GitHub.'
complete -c brew -l repair --description 'Migrate tapped formulae from symlink-based to directory-based structure.'
complete -c brew -l list-pinned --description 'List all pinned taps.'
complete -c brew -l quieter --description 'Suppress any warnings.'
complete -c brew -l destdir --description 'Create subdirectories in the directory named by path instead.'
complete -c brew -l merge --description 'Use git merge to apply updates (rather than git rebase).'
complete -c brew -l ignore-pinned --description 'Set a successful exit status even if pinned formulae are not upgraded.'
complete -c brew -l recursive --description 'Resolve more than one level of dependencies.'
complete -c brew -l cache --description 'Display Homebrew\'s download cache.  See also HOMEBREW_CACHE.'
complete -c brew -l cellar --description 'Display Homebrew\'s Cellar path.'
complete -c brew -l shell --description 'Generate a list of environment variables for the specified shell, or --shell=…'
complete -c brew -l plain --description 'Generate plain output even when piped.'
complete -c brew -l prefix --description 'Display Homebrew\'s install path.'
complete -c brew -l repository -l repo --description 'Display where Homebrew\'s . git directory is located.'
complete -c brew -l strict --description 'Run additional style checks, including RuboCop style checks.'
complete -c brew -l online --description 'Run additional slower style checks that require a network connection.'
complete -c brew -l new-formula --description 'Run various additional style checks to determine if a new formula is eligible…'
complete -c brew -l display-filename --description 'Prefix every line of output with the file or formula name being audited, to m…'
complete -c brew -l only --description 'Specify a comma-separated method list to only run the methods named audit_met…'
complete -c brew -l except --description 'Specify a comma-separated method list to skip running the methods named audit…'
complete -c brew -l skip-relocation --description 'Do not check if the bottle can be marked as relocatable.'
complete -c brew -l or-later --description 'Append _or_later to the bottle tag.'
complete -c brew -l force-core-tap --description 'Build a bottle even if formula is not in homebrew/core or any installed taps.'
complete -c brew -l no-rebuild --description 'If the formula specifies a rebuild version, remove it from the generated DSL.'
complete -c brew -l keep-old --description 'If the formula specifies a rebuild version, attempt to preserve its value in …'
complete -c brew -l write --description 'Write changes to the formula file.'
complete -c brew -l no-commit --description 'When passed with --write, a new commit will not generated after writing chang…'
complete -c brew -l root-url --description 'Use the specified URL as the root of the bottle\'s URL instead of Homebrew\'s d…'
complete -c brew -l no-audit --description 'Don\'t run brew audit before opening the PR.'
complete -c brew -l no-browse --description 'Print the pull request URL instead of opening in a browser.'
complete -c brew -l mirror --description 'Use the specified URL as a mirror URL.'
complete -c brew -l message --description 'Append message to the default pull request message.'
complete -c brew -l url --description 'Specify the URL for the new download.'
complete -c brew -l sha256 --description 'Specify the SHA-256 checksum of the new download.'
complete -c brew -l tag --description 'Specify the new git commit tag for the formula.'
complete -c brew -l revision --description 'Specify the new git commit revision corresponding to the specified tag.'
complete -c brew -l autotools --description 'Create a basic template for an Autotools-style build.'
complete -c brew -l cmake --description 'Create a basic template for a CMake-style build.'
complete -c brew -l go --description 'Create a basic template for a Go build.'
complete -c brew -l meson --description 'Create a basic template for a Meson-style build.'
complete -c brew -l perl --description 'Create a basic template for a Perl build.'
complete -c brew -l python --description 'Create a basic template for a Python build.'
complete -c brew -l rust --description 'Create a basic template for a Rust build.'
complete -c brew -l no-fetch --description 'Homebrew will not download URL to the cache and will thus not add its SHA-256…'
complete -c brew -l set-name --description 'Explicitly set the name of the new formula.'
complete -c brew -l set-version --description 'Explicitly set the version of the new formula.'
complete -c brew -l tap --description 'Generate the new formula within the given tap, specified as user/repo.'
complete -c brew -l examples --description 'Show several examples.'
complete -c brew -l pry --description 'Use Pry instead of IRB.  Implied if HOMEBREW_PRY is set.'
complete -c brew -l test --description 'Show only missing libraries and exit with a non-zero status if any missing li…'
complete -c brew -l reverse --description 'For every library that a keg references, print its dylib path followed by the…'
complete -c brew -l cached --description 'Print the cached linkage values stored in HOMEBREW_CACHE, set by a previous b…'
complete -c brew -l fail-if-changed --description 'Return a failing status code if changes are detected in the manpage outputs.'
complete -c brew -l link --description 'This is now done automatically by brew update.'
complete -c brew -l bottle --description 'Handle bottles, pulling the bottle-update commit and publishing files on Bint…'
complete -c brew -l bump --description 'For one-formula PRs, automatically reword commit message to our preferred for…'
complete -c brew -l clean --description 'Do not rewrite or otherwise modify the commits found in the pulled PR.'
complete -c brew -l ignore-whitespace --description 'Silently ignore whitespace discrepancies when applying diffs.'
complete -c brew -l resolve --description 'When a patch fails to apply, leave in progress and allow user to resolve, ins…'
complete -c brew -l branch-okay --description 'Do not warn if pulling to a branch besides master (useful for testing).'
complete -c brew -l no-pbcopy --description 'Do not copy anything to the system clipboard.'
complete -c brew -l no-publish --description 'Do not publish bottles to Bintray.'
complete -c brew -l warn-on-publish-failure --description 'Do not exit if there\'s a failure publishing bottles on Bintray.'
complete -c brew -l bintray-org --description 'Publish bottles to the specified Bintray organisation.'
complete -c brew -l test-bot-user --description 'Pull the bottle block commit from the specified user on GitHub.'
complete -c brew -l markdown --description 'Print as a Markdown list.'
complete -c brew -s e --description 'Execute the given text string as a script.'
complete -c brew -l coverage --description 'Generate code coverage reports.'
complete -c brew -l generic --description 'Run only OS-agnostic tests.'
complete -c brew -l no-compat --description 'Do not load the compatibility layer when running tests.'
complete -c brew -l seed --description 'Randomise tests with the specified value instead of a random seed.'
complete -c brew -l to-tag --description 'Set HOMEBREW_UPDATE_TO_TAG to test updating between tags.'
complete -c brew -l commit --description 'Use the specified commit as the start commit.'
complete -c brew -l before --description 'Use the commit at the specified date as the start commit.'

