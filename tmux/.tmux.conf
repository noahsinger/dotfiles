# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# support logging out and back in
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# vi mode
set-window-option -g mode-keys vi

# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

set-window-option -g automatic-rename on

# Enable mouse
set -g mouse on
set -g mode-mouse on
setw -g mouse-resize-pane on
setw -g mouse-select-window on
setw -g mouse-select-pane on

# brew install reattach-to-user-namespace
# pbcopy support
set -g default-shell $SHELL 
set -g default-command "reattach-to-user-namespace -l ${SHELL}# Update default binding of `Enter` to also use copy-pipe

setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Set the prefix to ^A.
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Open new stuff with correct CWD

#hsplit
unbind '"'
bind | split-window -h -c "#{pane_current_path}"

#vsplit
unbind %
bind - split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}" \; split-window -h -c "#{pane_current_path}" \; select-pane -L

# smart pane switching with awareness of vim splits
bind left run "(tmux display-message -p "select-pane -L" | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind down run "(tmux display-message -p "select-pane -D" | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind up run "(tmux display-message -p "select-pane -U" | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind right run "(tmux display-message -p "select-pane -R" | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n \\ run "(tmux display-message -p "select-pane -l | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# bind C-l send-keys 'C-l'

# shortcuts
bind - split-window -l 20 -c "#{pane_current_path}"
bind _ split-window -l 20 -c "#{pane_current_path}" node

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 2               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "%b %d %Y @ %l:%M %p"

# split automatically on startup
# split-window -h -c "#{pane_current_path}"
# select-pane -L

# control automatic window renaming
set-window-option -g automatic-rename on # auto name
setw -g automatic-rename

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer

# scrolling with terminal scroll bar
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Panes
bind -r K resize-pane -U 2
bind -r J resize-pane -D 2
bind -r H resize-pane -L 2
bind -r L resize-pane -R 2
bind tab next-layout

bind -r j resize-pane -D
bind -r k resize-pane -U
bind -r h resize-pane -L
bind -r l resize-pane -R

# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window

# Monitor Activity
bind m set-window-option monitor-activity

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# set pane colors - hilight the active pane
set-option -g pane-border-fg colour60 #base02
set-option -g pane-active-border-fg colour62 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
# set -g status-left '#[fg=colour235,bg=colour252,bold] â #S #[fg=colour252,bg=colour238,nobold]â®€#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]â®€'
# set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
# set -g window-status-current-format "#[fg=colour234,bg=colour39]â®€#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]â®€"
set -g status-left '#{usage_cpu} #{usage_disk} #{usage_mem}'

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
#unbind l
#bind C-a last-window

# Bigger history
set -g history-limit 10000
# Reload key
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
set -g @plugin 'chriszarate/tmux-struggle-bus'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
